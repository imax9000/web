---
import { DeclarationReflection } from "typedoc";
import { generateMeta, type Meta } from "../../util/generateMeta";
import { TitleSection } from "../page/TitleSection.tsx";
import Page from "./Page.astro";
import Sidebar, { generateSidebar } from "./Sidebar.astro";

interface Props {
	module?: DeclarationReflection | undefined;
	meta?: Meta;
}

let { module, meta } = Astro.props;

if (!module || !module.isDeclaration()) {
	throw new Error("Reflection has no parent module.");
}

if (!meta?.title || !meta?.description) {
	if (module) {
		meta = { ...(meta || {}), ...generateMeta(module) };
	} else {
		meta = {
			...(meta || {}),
			title: "Skyware | Documentation",
			description: "Skyware is a collection of libraries for building on Bluesky."
		}
	}
}

const sidebar = await generateSidebar(module);
---
<Page meta={meta}>
	<div class="flex flex-row w-full">
		<Sidebar {...sidebar} />
		<main class="flex-grow min-w-0 w-full p-6">
			<div class="max-w-5xl mx-auto flex flex-row">
				<div class="flex-grow max-w-full">
					<slot />
				</div>
			</div>
		</main>
	</div>
</Page>
