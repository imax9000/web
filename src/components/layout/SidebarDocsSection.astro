---
import { clsx } from "clsx/lite";
import type { DeclarationReflection } from "typedoc";
import { generateTOC, TableOfContents } from "./TableOfContents";

interface Props {
	title: string;
	section: Array<{ name: string; url: string }>;
	reflection?: DeclarationReflection | null;
}

const { title, section, reflection } = Astro.props;

const toc = generateTOC(reflection) || null;

const current = section.find(({ url }) => Astro.url.pathname.endsWith(url));
---
<h4 class="pl-4 text-gray-700 text-docs-base">{title}</h4>
<ul class="mt-1.5">
	{
		section.map(({ name, url }) => (
			<li
				class={clsx("py-1.5 pl-4", url === current?.url && "border-l border-l-accent")}
			>
				<a
					href={url}
					class={clsx(
						"font-mono text-code-h3",
						url === current?.url ? "text-accent" : "text-gray-900",
					)}
				>{name}</a>
				{
					name === reflection?.name && toc ? (
						<TableOfContents
							toc={toc}
							client:only="react"
						/>
					) : null
				}
			</li>
		))
	}
</ul>
