---
import Sidebar, { generateSidebar } from "src/components/layout/Sidebar.astro";
import type { DeclarationReflection } from "typedoc";
import DocsLayout from "../components/layout/Layout.astro";
import { PropertyMembers } from "../components/page/PropertyMembers";
import { TitleSection } from "../components/page/TitleSection";
import { TypeAliasTitleSection } from "../components/page/TypeAliasTitleSection";
import { reflectionShouldBeRendered } from "../lib/rendering/reflectionShouldBeRendered";
import { generateMeta } from "../lib/util/generateMeta";
import { sortReflections as sort } from "../lib/util/sortReflections";

interface Props {
	reflection: DeclarationReflection;
}

const { reflection } = Astro.props;

const properties = sort(
	reflection.children?.filter(reflectionShouldBeRendered) || [],
);

const sidebar = await generateSidebar(reflection.parent);
---

<DocsLayout meta={generateMeta(reflection)}>
	<Sidebar {...sidebar} slot="sidebar" />
	<div class="w-full">
		{
			properties?.length ? <TitleSection reflection={reflection} /> : (
				<TypeAliasTitleSection reflection={reflection} />
			)
		}
	</div>
	{
		properties?.length ? (
			<>
				<h2 class="w-1 h-1 -m-1 overflow-hidden" id="properties">
					Properties
				</h2>
				<div class="w-full pl-4 py-8 border-t border-gray-300">
					<PropertyMembers properties={properties} />
				</div>
			</>
		) : null
	}
</DocsLayout>
