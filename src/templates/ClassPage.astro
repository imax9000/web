---
import { DeclarationReflection, ReflectionKind } from "typedoc";
import DocsLayout from "../components/layout/Layout.astro";
import { FunctionDocumentation } from "../components/page/FunctionDocumentation";
import { MethodMembers } from "../components/page/MethodMembers";
import { PropertyMembers } from "../components/page/PropertyMembers";
import { TitleSection } from "../components/page/TitleSection";
import { generateMeta } from "../util/generateMeta";
import { reflectionShouldBeRendered } from "../util/reflectionShouldBeRendered";
import { sortReflections as sort } from "../util/sortReflections";

interface Props {
	reflection: DeclarationReflection;
}

const { reflection } = Astro.props;

const ctor = reflection.getChildrenByKind(ReflectionKind.Constructor)[0];
const properties = sort(
	reflection.getChildrenByKind(ReflectionKind.VariableOrProperty).filter(
		reflectionShouldBeRendered,
	),
);
const accessors = sort(
	reflection.getChildrenByKind(ReflectionKind.Accessor).filter((accessor) =>
		reflectionShouldBeRendered(accessor) && accessor.signatures?.length
		&& accessor.signatures.some(reflectionShouldBeRendered)
	),
);
const methods = sort(
	reflection.getChildrenByKind(ReflectionKind.Method).filter((method) =>
		reflectionShouldBeRendered(method) && method.signatures?.length
		&& method.signatures.some(reflectionShouldBeRendered)
	),
);
---

<DocsLayout module={reflection.parent} meta={generateMeta(reflection)}>
	<div class="w-full">
		<TitleSection reflection={reflection} />
	</div>
	{
		ctor && ctor.signatures.some((sig) =>
			sig.parameters?.length && reflectionShouldBeRendered(sig)
		)
		? (
			<h2 class="w-1 h-1 -m-1 overflow-hidden">Constructor</h2>
			<div class="w-full pl-4 py-8 border-t border-gray-300">
				<FunctionDocumentation reflection={ctor} />
			</div>
		)
		: null
	}
	{
		properties.length ? (
			<h2 class="w-1 h-1 -m-1 overflow-hidden" id="properties">
				Properties
			</h2>
			<div class="w-full pl-4 py-8 border-t border-gray-300">
				<PropertyMembers properties={properties} />
			</div>
		) : null
	}
	{
		accessors.length ? (
			<h2 class="w-1 h-1 -m-1 overflow-hidden" id="accessors">
				Accessors
			</h2>
			<div class="w-full pl-4 py-8 border-t border-gray-300">
				<PropertyMembers properties={accessors} />
			</div>
		) : null
	}
	{
		methods.length ? (
			<h2 class="w-1 h-1 -m-1 overflow-hidden" id="methods">
				Methods
			</h2>
			<div class="w-full pl-4 py-8 border-t border-gray-300">
				<MethodMembers methods={methods} />
			</div>
		) : null
	}
</DocsLayout>
<script src="../util/handleOverloadInteractivity.ts"></script>
